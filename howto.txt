This is how to properly set up the instance. Run on ssh:

New method:

sudo sh docker.sh

may need to redirect http traffic to 3000
sudo iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 3000

In ubuntu's ~ folder.

What it does: Starts two containers on the jenkins network.
Maps port 80 (http) to port 3000 on the docker jenkins contain (aka the port that the dev server runs on). 
Makes jenkins accessible on port 8080.
Also allows anyone to access them at joina.group.

Old method (may be out of date):

sudo docker run --name jenkins-docker --rm --detach \
  --privileged --network jenkins --network-alias docker \
  --env DOCKER_TLS_CERTDIR=/certs \
  --volume jenkins-docker-certs:/certs/client \
  --volume jenkins-data:/var/jenkins_home \
  --add-host=joina.group:0.0.0.0 \
  --publish 3000:3000 \
  --publish 2376:2376 docker:dind

Then:

sudo docker run --name jenkins-blueocean --rm --detach \
  --network jenkins --env DOCKER_HOST=tcp://docker:2376 \
  --env DOCKER_CERT_PATH=/certs/client --env DOCKER_TLS_VERIFY=1 \
  --publish 8080:8080 --publish 50000:50000 \
  --volume jenkins-data:/var/jenkins_home \
  --volume jenkins-docker-certs:/certs/client:ro \
  --volume "$HOME":/home \
  myjenkins-blueocean:1.1
  

Then rerun the jenkins build process by going to:

http://joina.group:8080/blue

And re-run the last master build process. This will take a few minutes, and may crash the server. Run on ssh:

htop

And watch the build process. When the CPU drops back to low usage, it's probably done. Check to see if it's running:

http://joina.group/

npm run dev process:

concurrently:
npm run server ->     "server": "nodemon server.js",
npm run client ->     "client": "npm start --prefix client"  ->     "start": "react-scripts start",
